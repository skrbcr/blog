<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="ja"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://skrbcr.github.io/blog/feed.xml" rel="self" type="application/atom+xml" /><link href="https://skrbcr.github.io/blog/" rel="alternate" type="text/html" hreflang="ja" /><updated>2023-10-20T12:56:45+09:00</updated><id>https://skrbcr.github.io/blog/feed.xml</id><title type="html">今月の物置</title><subtitle>物理＋プログラミング＋その他</subtitle><author><name>今月の新刊（@skrbcr）</name></author><entry><title type="html">AtCoder 緑色になりました</title><link href="https://skrbcr.github.io/blog/programming/atcoder_green" rel="alternate" type="text/html" title="AtCoder 緑色になりました" /><published>2023-09-10T00:00:00+09:00</published><updated>2023-09-10T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/programming/atcoder_green</id><content type="html" xml:base="https://skrbcr.github.io/blog/programming/atcoder_green"><![CDATA[<p><a href="https://skrbcr.github.io/blog/programming/atcoder_brown">前回</a>のあらすじ：茶色くなりました</p>

<h2 id="入緑">入緑</h2>
<p>AtCoder のランクが緑になりました。わーい。緑くなるまでの経緯を書きます。</p>

<p><img src="/blog/assets/2023-09-10-atcoder_green/graph.png" alt="レートグラフ" /></p>

<h2 id="私について">私について</h2>
<ul>
  <li><a href="https://atcoder.jp/users/skrbcr">AtCoder アカウント</a></li>
  <li>大学生。非情報系</li>
  <li>使用言語：C++</li>
</ul>

<h2 id="勉強方法">勉強方法</h2>
<p>いつもお世話になっている記事、<a href="https://qiita.com/e869120/items/eb50fdaece12be418faa">レッドコーダーが教える、競プロ・AtCoder上達のガイドライン【中級編：目指せ水色コーダー！】</a>に従って勉強しました。記事では緑コーダーになるには？　は書いていませんが、茶色→水色への指針が書かれています。</p>

<h3 id="新たに学んだ内容">新たに学んだ内容</h3>
<p>蛇足な感もありますが、上の記事に倣って勉強したアルゴリズムなどを列挙します。他に参考になったページも掲げます。</p>
<ul>
  <li>深さ優先探索（DFS）：改めて勉強した。<a href="https://qiita.com/drken/items/4a7869c5e304883f539b">DFS (深さ優先探索) 超入門！ 〜 グラフ・アルゴリズムの世界への入口 〜【前編】</a>はグラフの基礎も学べる。<a href="https://qiita.com/drken/items/a803d4fc4a727e02f7ba">DFS (深さ優先探索) 超入門！ 〜 グラフ・アルゴリズムの世界への入口 〜【後編】</a>：発展的な内容が多いが面白かった</li>
  <li>幅優先探索（BFS）：上に同じ。<a href="https://qiita.com/drken/items/996d80bcae64649a6580">BFS (幅優先探索) 超入門！ 〜 キューを鮮やかに使いこなす 〜</a>がBFS 版の記事</li>
  <li>動的計画法：ナップザックDPの簡単なのだけ。記事で紹介されているものではなく<a href="https://qiita.com/drken/items/dc53c683d6de8aeacf5a">動的計画法超入門！ Educational DP Contest の A ～ E 問題の解説と類題集</a>を読んだり解いたりした</li>
  <li>高速な素数判定法：実は既に灰～茶色の時点で学習済み。ライブラリを作っています。<a href="https://qiita.com/drken/items/a14e9af0ca2d857dad23">AtCoder 版！マスター・オブ・整数 (素因数分解編)</a>が参考になる。なお、まだ全て読めていない</li>
  <li>いくつかの STL：<code class="language-plaintext highlighter-rouge">gcd</code>, <code class="language-plaintext highlighter-rouge">stack</code>, <code class="language-plaintext highlighter-rouge">pair</code></li>
</ul>

<p>動的計画法（ナップザックDP）の勉強にほとんどの時間を費やしました。ここまでで一番習得が大変そうです<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">1</a></sup>。</p>

<h3 id="過去問練習">過去問練習</h3>
<p>茶色後半のとき、コンテスト本番、B問題などでつまづく重大インシデントが多発しました。この頃は灰diff はほとんど解いていませんでした。これが仇をなしていると考え、速く正確に解く練習を始めました。方法は、過去問各回を、A から茶diff問題までを時間を測って解く、です。実際のコンテストでは練習の感覚を頼りに、焦らず丁寧に素早く解くようにします。まだこの方法が良いのかはっきりとした結果は見えていないので、後日追記します。</p>

<p>より難しい問題については、上の早解き練習で掛けた時間を$x$ 分としたとき、$(100 - x)$ 分の時間で解くということをしています<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">2</a></sup>。</p>

<h2 id="その他">その他</h2>
<ul>
  <li>ノートは結構効果があるので続けています（入茶記事参照）</li>
  <li>自分とレート 1000↑ の人たちが同じ色というのに違和感があります。。</li>
  <li>ラーメン食べたい</li>
</ul>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:2" role="doc-endnote">
      <p>まだ理解途上です <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:1" role="doc-endnote">
      <p>夏休みなので時間が多いのです <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="programming" /><summary type="html"><![CDATA[前回のあらすじ：茶色くなりました]]></summary></entry><entry><title type="html">AtCoder 茶色になりました</title><link href="https://skrbcr.github.io/blog/programming/atcoder_brown" rel="alternate" type="text/html" title="AtCoder 茶色になりました" /><published>2023-08-16T00:00:00+09:00</published><updated>2023-08-16T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/programming/atcoder_brown</id><content type="html" xml:base="https://skrbcr.github.io/blog/programming/atcoder_brown"><![CDATA[<h2 id="入茶">入茶</h2>
<p>しばらく前に<a href="https://skrbcr.github.io/blog/programing/begin_atcoder">AtCoder を始め</a>、先日ランクが茶色になりました。入茶までにしたことや、現在の私のプログラミング能力について書きます。</p>

<p><img src="/blog/assets/2023-08-13-atcoder_brown/graph.png" alt="レートグラフ" title="レートグラフ" /></p>

<h3 id="私について">私について</h3>
<ul>
  <li><a href="https://atcoder.jp/users/skrbcr">AtCoder アカウント</a></li>
  <li>大学生。非情報系</li>
  <li>使用言語：C++</li>
  <li>登録時のプログラミング能力：2年ほど遊びと大学の課題でプログラミングに触れてきた。しかし特段上達した気はしない。基礎文法はだいたい理解していたと思う</li>
</ul>

<p>1~2ヶ月で入茶していますが、これは単純に2年間（競プロでないにしても）プログラミングに触れていた貯金が為です。</p>

<h2 id="勉強方法">勉強方法</h2>
<p>前回言及した<a href="https://qiita.com/e869120/items/f1c6f98364d1443148b3">レッドコーダーが教える、競プロ・AtCoder上達のガイドライン【初級編：競プロを始めよう】 | Qiita</a>に従って勉強しました。</p>

<h3 id="内容">内容</h3>
<p>前回の記事以降、次の内容を学習しました：</p>

<ul>
  <li>全探索：<a href="https://qiita.com/e869120/items/25cb52ba47be0fd418d6#3-%E7%A8%AE%E3%80%85%E3%81%AE%E5%85%A8%E6%8E%A2%E7%B4%A2bit%E5%85%A8%E6%8E%A2%E7%B4%A2%E9%A0%86%E5%88%97%E5%85%A8%E6%8E%A2%E7%B4%A2%E3%81%AA%E3%81%A9">たのしい探索アルゴリズムの世界【前編：全探索、bit全探索から半分全列挙まで】</a> が勉強になりました
    <ul>
      <li>bit 全探索</li>
      <li>順列全探索</li>
      <li>深さ優先探索</li>
      <li>幅優先探索</li>
    </ul>
  </li>
  <li>二分探索：上に同じ
    <ul>
      <li>手で実装</li>
      <li><code class="language-plaintext highlighter-rouge">lower_bound</code> 関数</li>
    </ul>
  </li>
  <li>いくつかの STL：アルゴリズムの勉強や ABC の過去問を解く中で知ったものを学習。<a href="https://qiita.com/e869120/items/eb50fdaece12be418faa">上の記事の中編</a>からチョイスすると↓な感じ
    <ul>
      <li><code class="language-plaintext highlighter-rouge">abs</code>, <code class="language-plaintext highlighter-rouge">sin</code>, <code class="language-plaintext highlighter-rouge">cos</code>, <code class="language-plaintext highlighter-rouge">tan</code>, <code class="language-plaintext highlighter-rouge">string</code>, <code class="language-plaintext highlighter-rouge">min</code>, <code class="language-plaintext highlighter-rouge">max</code>, <code class="language-plaintext highlighter-rouge">vector</code>：既に知っていたものたち</li>
      <li><code class="language-plaintext highlighter-rouge">swap</code>, <code class="language-plaintext highlighter-rouge">reverse</code>, <code class="language-plaintext highlighter-rouge">sort</code>, <code class="language-plaintext highlighter-rouge">queue</code>, <code class="language-plaintext highlighter-rouge">map</code>, <code class="language-plaintext highlighter-rouge">set</code>, <code class="language-plaintext highlighter-rouge">lower_bound</code>, <code class="language-plaintext highlighter-rouge">next_permutation</code>：初耳のものたち</li>
    </ul>
  </li>
</ul>

<p>ちなみに、<code class="language-plaintext highlighter-rouge">set</code> を初めて知ったときはあまりの便利さに感動しました。</p>

<h3 id="方法">方法</h3>
<p>学習して知ったことはノート<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>にまとめています。学校でのお勉強の経験上、手を動かすだけで定着が良くなるのと、後で復習できるからです。</p>

<p>上の内容を学習する傍ら、ABC の過去問（A-D 問題のみ）を新しいものから10回分ほど解きました。これは、不足の基礎知識を身につけるのと、ABC の問題に慣れるためです。これだけで問題を解く時間が短くなりパフォーマンスが向上しました。</p>

<p>アルゴリズムの解説記事にはたいてい練習問題も付いているので、できるだけ解くようにしています。手を動かす（略。また、実際に解いてみて、初めて理解できたり勘違いに気づいたりしたことが多かったからです。</p>

<h2 id="その他">その他</h2>
<ul>
  <li>始める前は、競プロは初心者お断り感があると勝手に思っていたのですが、全くそのようなことはなく、寧ろ初心者歓迎の雰囲気があり驚きました。AtCoder 公式から C++ の基礎講座も出てますし</li>
  <li>上に関連して、「AtCoder はインフレを起こしており、茶色になるのがより大変になっている」という話を聞くことがあります。私は初心者なのでその是非は分かりません。しかし、初心者向けの解説記事が充実しているので恐れることはないんじゃないかなーと思っています</li>
</ul>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>ちなみに私は紙のノート派です <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="programming" /><summary type="html"><![CDATA[入茶 しばらく前にAtCoder を始め、先日ランクが茶色になりました。入茶までにしたことや、現在の私のプログラミング能力について書きます。]]></summary></entry><entry><title type="html">AtCoder はじめました</title><link href="https://skrbcr.github.io/blog/programming/begin_atcoder" rel="alternate" type="text/html" title="AtCoder はじめました" /><published>2023-07-30T00:00:00+09:00</published><updated>2023-07-30T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/programming/begin_atcoder</id><content type="html" xml:base="https://skrbcr.github.io/blog/programming/begin_atcoder"><![CDATA[<h2 id="atcoder-はじめました">AtCoder はじめました</h2>
<p>AtCoder に<a href="https://atcoder.jp/users/skrbcr">アカウント</a>を作ってコンテストに参加してみました。</p>

<h3 id="はじめた経緯">はじめた経緯</h3>
<p>プログラミングを知って2年半近く場当たり的に独学でやってきたのですが、最近実力が頭打ちになっているのを実感していました。またプログラミングに飽きてきたこともあり、趣向が異なり、勉強も兼ねるようなものに挑んでみたいと考えていました。友人がだいぶ前に AtCoder を始めたと言っていたのを思い出し、自分もやってみようと登録しました。</p>

<h3 id="はじめる前のスペック現在のスペック">はじめる前のスペック≒現在のスペック</h3>
<p>後で見返したときに上達を測れるように、始める前の私のスペックを書いておきます。総じて初心者です：</p>

<ul>
  <li>プログラムに対する理解：変数や if, for, while みたいなのは問題なし</li>
  <li>習得したアルゴリズム：for ループいっぱい書いてとにかく全探索。計算量の概念は知ってるけど面倒なので考えない</li>
  <li>学部学科：非情報系</li>
  <li>言語：C++ は少し, Python はレポートに貼るグラフを作るソフトだと思っている</li>
  <li>作ってきたもの：GitHub やこのブログにあります。真面目に取り組んでいる人から見たら、初心者が頑張って作った感じじゃないかな</li>
</ul>

<h2 id="実際にコンテストに出た感想">実際にコンテストに出た感想</h2>
<p>主に<a href="https://qiita.com/drken/items/fd4e5e3630d0f5859067">AtCoder に登録したら次にやること ～ これだけ解けば十分闘える！過去問精選 10 問 ～ | Qiita</a>、<a href="https://qiita.com/e869120/items/f1c6f98364d1443148b3">レッドコーダーが教える、競プロ・AtCoder上達のガイドライン【初級編：競プロを始めよう】 | Qiita</a>を参考にしました。</p>

<h4 id="出場前">出場前</h4>
<p>登録後、初めてのコンテストまでに AtCoder Beginners Selection を解き、こんな感じかーと雰囲気をチラ見しました。</p>

<h4 id="初arc">初ARC</h4>
<p>ちょうど登録した日に AtCoder Regular Contest 164 が開催されたので参加してみました。A問題から解けず、提出しても WA か TLE と、散々な結果でした。当面の間は ABC だけ出ようと思いました。</p>

<h4 id="abc-までにやったこと">ABC までにやったこと</h4>
<p>AIZU ONLINE JUDGE (AOJ) に登録し、Introduction to Programing I の1~10 の40問を解きました。プログラミングの基礎は知っているつもりでしたが、知らないことがあり勉強になりました。復習にもなりました。</p>

<h4 id="初abc">初ABC</h4>
<p>AtCoder Beginners Contest 310 に出ました。30分でB問題まで解けましたが、C問題がどうしても TLE。解説を読んで「そんなすごいものがあるのか！」と感動し、アルゴリズムや C++ の勉強を（人生で初めて）真面目にしようと思いました。</p>

<h3 id="目標">目標</h3>
<p>目標はレッドコーダーですが、現実的でないので茶色を目指します。あとは、ABC を本番で4完してみたいですね。夏休みの後半は暇なはずなので、この2つの夏休み中の達成を目標にします！</p>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="programming" /><summary type="html"><![CDATA[AtCoder はじめました AtCoder にアカウントを作ってコンテストに参加してみました。]]></summary></entry><entry><title type="html">伊豆（亀石） 天体撮影 2022夏</title><link href="https://skrbcr.github.io/blog/astron/izu_kameishi" rel="alternate" type="text/html" title="伊豆（亀石） 天体撮影 2022夏" /><published>2022-10-30T00:00:00+09:00</published><updated>2022-10-30T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/astron/izu_kameishi</id><content type="html" xml:base="https://skrbcr.github.io/blog/astron/izu_kameishi"><![CDATA[<center><img src="/blog/assets/2022-10-30-izu_kameishi/andromeda.jpg" alt="アンドロメダ銀河" style="width: 90%;" />
<p>Nikon Z50; Vixen FL55SS鏡筒使用, 180 秒 × 9 枚（1620 秒）, ISO 3200</p>
<p>アンドロメダ銀河（M31）<br />
中央のバルジのみならず、円盤も写っている。とはいえ円盤はぼんやり程度<br />
二つの伴銀河（M32, M110）はばっちり</p><hr style="width: 50%" /></center>

<h2 id="まえがき">まえがき</h2>
<p>9月下旬に伊豆半島で天体撮影を行いました。具合的な場所は伊豆スカイラインの亀石パーキングエリアです。家族がいつの間にか天体望遠鏡を導入していたので、その初陣も兼ねてアンドロメダ銀河の撮影に挑戦しました。</p>

<p>この日は曇りがちの天気で、何度も雲や霧に邪魔されました。日没後数時間たって、ようやくアンドロメダ銀河を写せる状態になりました。待っている間はひたすら車の中なのですが、まあ暇なこと笑　天体撮影にはこういうのもつきものなのでしょうね。</p>

<h2 id="撮影地について">撮影地について</h2>
<p>伊豆スカイラインは伊豆半島の北東部を縦に走る有料道路です。そのパーキングエリアの一つ、亀石PA にて撮影を行いました。伊豆スカイラインのパーキングエリアは数台分の駐車スペースのみあるところも多いようですが、この亀石PA はトイレや自動販売機が完備され、駐車台数も多いです。</p>

<p>撮影環境自体はかなり良好でした。空の暗さでいうと、現地の光害はパーキングエリアのトイレと時々走っている自動車のライトくらいです。これらを上手く避ければ現地の光は問題にならないです。遠くの街の光はというと、さすがに熱海（東）や沼津（西）が近いために、地平線付近はばっちり白ばんでいます。この辺りの天体を狙う場合は要注意だと思います。とはいえ、トイレ・自動販売機・駐車スペースというパーキングエリアの恩恵を受けながら暗い夜空にカメラを向けられる好立地です。</p>

<h2 id="撮影">撮影</h2>
<p>いつのまにか撮影機材がアップグレードしていました。これまでは望遠レンズを用いて撮影していたのですが、今回は望遠鏡が導入されました。Vixen の FL55SS です。家族によると、300 mm 以上の望遠レンズを用いるつもりなら、それよりも望遠鏡を使う方がよい、ので導入したそうです。</p>

<p>今回は上記の通り雲が邪魔する時間が長く、まともに撮影できたのはアンドロメダ銀河のみでした。その写真が冒頭に載せたものです。<a href="jogashima2">前回</a>と比べて、星の数、円盤の写り、周辺減光の少なさ、そのどれもが改善しています。これは主に望遠鏡の使用が理由として大きいのでしょうね。ちなみに、前回のアンドロメダ銀河↓</p>

<center><img src="/blog/assets/2022-09-07-jogashima2/andromeda.jpg" alt="アンドロメダ銀河（前回）" style="width: 70%;" />
<p>Nikon Z50; 250 mm（フルサイズ換算: 350 mm）, F6.3, 180 秒 × 4 枚（720 秒）, ISO 3200</p>
<p>前回撮影した アンドロメダ銀河（M31）　城ヶ島にて<br />
天体写真というよりも双眼鏡で覗いた感じ。スタックしてもこの程度でした</p>
<hr style="width: 50%" /></center>

<p>撮影技術・加工技術は何ら進歩していないのにこの違い！　露光時間をもっと増やせばもっと良い写真が撮れそうです（多分）。</p>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="astron" /><summary type="html"><![CDATA[Nikon Z50; Vixen FL55SS鏡筒使用, 180 秒 × 9 枚（1620 秒）, ISO 3200 アンドロメダ銀河（M31） 中央のバルジのみならず、円盤も写っている。とはいえ円盤はぼんやり程度 二つの伴銀河（M32, M110）はばっちり]]></summary></entry><entry><title type="html">城ヶ島 天体撮影 2022夏 その2</title><link href="https://skrbcr.github.io/blog/astron/jogashima2" rel="alternate" type="text/html" title="城ヶ島 天体撮影 2022夏 その2" /><published>2022-09-07T00:00:00+09:00</published><updated>2022-09-07T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/astron/jogashima2</id><content type="html" xml:base="https://skrbcr.github.io/blog/astron/jogashima2"><![CDATA[<h2 id="まえがき">まえがき</h2>
<p>8月下旬に <a href="jogasima">前回</a> と同じ城ヶ島の撮影地点にて天体撮影を行いました。今回は前回と違い、ポータブルでない赤道儀（Vixen MD-6SP）を使用しました。この赤道儀は随分古く、父が学生時代に使っていて長らく物置に眠っていたものです。そういう訳で上手く動作しないのではないかと心配でしたが、全くの杞憂でまだまだ現役で使えました。</p>

<p>また、前回の撮影では圧倒的に露出不足だったので、今回は露出に気を配って撮影しました。</p>

<h2 id="撮影">撮影</h2>

<p>今回は天候の兼ね合いもあり、二つの星雲 M8・M20 と、アンドロメダ銀河の二枚です。</p>

<center><img src="/blog/assets/2022-09-07-jogashima2/m8_m20.jpg" alt="二つの星雲 M8・M20" style="width: 50%;" />
<p>Nikon Z50; 250 mm（フルサイズ換算: 350 mm）, F6.3, 180 秒 × 5 枚（900 秒）, ISO 3200</p>
<p>M8（干潟星雲）・M20（三裂星雲）<br />
天の川銀河の中心部に位置する二つの星雲。左下がM8、右上がM20。</p><hr style="width: 50%" /></center>

<p></p>

<center><img src="/blog/assets/2022-09-07-jogashima2/andromeda.jpg" alt="アンドロメダ銀河" style="width: 90%;" />
<p>Nikon Z50; 250 mm（フルサイズ換算: 350 mm）, F6.3, 180 秒 × 4 枚（720 秒）, ISO 3200</p>
<p>アンドロメダ銀河（M31）<br />
中央に鎮座。円盤のガスも僅かに写っている箇所がある。<br />
周囲には伴銀河の M110（アンドロメダの北）と、M32 思われるもの（アンドロメダの南東すぐ）が写っている。</p>
<hr style="width: 50%" /></center>

<h2 id="あとがき">あとがき</h2>
<p>適正露出についての知識を得て、前回よりも綺麗な画像を得ることができました（ただし、アップした画像はいずれもサイズを落とすために縮小しています・・・）。M8・M20はよく撮れたと勝手に思っています。アンドロメダ銀河については総露出時間を更に伸ばして枚数を重ねることで、より鮮明な画像が得られるのではないかと期待しています。とはいえ、基本的な技術で向上できる部分は沢山あるので、引き続きそういった知識の習得をしたいと思います。</p>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="astron" /><summary type="html"><![CDATA[まえがき 8月下旬に 前回 と同じ城ヶ島の撮影地点にて天体撮影を行いました。今回は前回と違い、ポータブルでない赤道儀（Vixen MD-6SP）を使用しました。この赤道儀は随分古く、父が学生時代に使っていて長らく物置に眠っていたものです。そういう訳で上手く動作しないのではないかと心配でしたが、全くの杞憂でまだまだ現役で使えました。]]></summary></entry><entry><title type="html">月の軌道</title><link href="https://skrbcr.github.io/blog/physics/moon_orbit" rel="alternate" type="text/html" title="月の軌道" /><published>2022-08-29T00:00:00+09:00</published><updated>2022-08-29T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/physics/moon_orbit</id><content type="html" xml:base="https://skrbcr.github.io/blog/physics/moon_orbit"><![CDATA[<h2 id="調べること">調べること</h2>
<p>月の軌道を、地球や太陽との万有引力を考えて計算する。以下、煩雑な記号が乱れ飛びます。<a href="#result">結果までジャンプ</a>。</p>

<h3 id="問題設定">問題設定</h3>
<p>座標系の原点に太陽があるとし、太陽は動かないとする（太陽は地球や月に比べて十分に重いのでこう近似できる）。地球や月は、互いの万有引力や太陽からの重力を受けて運動している。</p>

<p>必要ないくつかの物理量を以下の通りおく：</p>
<ul>
  <li>万有引力定数 $G = 6.6726\times 10^{-11}~\text{m}^3\text{kg}^{-1}\text{s}^{-2} = 8.647\times 10^{-13}~\text{km}^3\text{kg}^{-1}\text{h}^{-1}$</li>
  <li>地球質量 $m = 5.97\times 10^{24}~\text{kg}$</li>
  <li>太陽質量 $M = 1.99\times 10^{30}~\text{kg}$</li>
  <li>月・地球質量比 $\mu = 0.0123002$</li>
  <li>月・地球距離 $R_{\textrm{me}} = 3.84\times 10^{5}~\text{km}$</li>
  <li>月周期 $T_{\text{moon}} = 27.3214~\text{day} = 655.7136~\text{h}$</li>
  <li>太陽-月・地球距離 $R_{\text{es}} = 1.4959787\times 10^8~\text{km}$</li>
  <li>地球周期 $T_{\text{earth}} = 365~\text{day} = 8760~\text{h}$</li>
</ul>

<p>便宜上、単位を $\text{km},~\text{kg},~\text{h(=hour)}$ で統一した。</p>

<h3 id="初期条件の設定">初期条件の設定</h3>

<center>
<img src="/blog/assets/2022-08-29-moon_orbit/setup.svg" style="width: 70%" />
<p>はじめ、月・地球・太陽はこのような配置で速度を持っているとする</p>
<hr class="separator" />
</center>

<p>最初、月・地球・太陽は上図の関係にあるとして、初期条件を次のように設定する：</p>
<ul>
  <li>月：位置 $(x,~y) = (0,~R_{\text{es}} - R_{\text{me}})$、速度 $(u,~v) = (0,~v_{\textrm{moon}})$</li>
  <li>地球：位置 $(x,~y) = (0,~R_{\text{es}})$、速度 $(u,~v) = (0,~v_{\textrm{earth}})$</li>
  <li>太陽：位置 $(x,~y) = (0,~0)$、速度 $(u,~v) = (0,~0)$</li>
</ul>

<p>$v_{\textrm{moon}}$ と $v_{\textrm{earth}}$ を決める。まず、月・地球系の重心から各天体への距離は両者の質量比より分かるので、重心に対する両者の速さが分かる：</p>

\[\begin{gather}
    v^{'}_{\textrm{moon}} = \frac{2\pi\frac{1/\mu}{1 + 1/\mu}R_{\text{me}}}{T_{\text{moon}}} \\
    v^{'}_{\textrm{earth}} = \frac{2\pi\frac{1}{1 + 1/\mu}R_{\text{me}}}{T_{\text{moon}}}
\end{gather}\]

<center>
<img src="/blog/assets/2022-08-29-moon_orbit/condition.svg" style="width: 70%" />
<p>重心からの各天体の距離は質量比より簡単に求まる。<br />両天体は重心周りに周期 $T_{\text{moon}}$ で回転することから、速さも求まる</p>
<hr class="separator" />
</center>

<p>つづいて、月・地球系の重心の速さも簡単に計算できる：</p>

\[\begin{equation}
    v_{\text{moon and earth}} = \frac{2\pi R_{\text{es}}}{T_{\text{earth}}}
\end{equation}\]

<p>以上より</p>

\[\begin{align}
    v_{\textrm{moon}} = v_{\text{moon and earth}} - v^{'}_{\textrm{moon}} = \frac{2\pi R_{\text{es}}}{T_{\text{earth}}} - \frac{2\pi\frac{1/\mu}{1 + 1/\mu}R_{\text{me}}}{T_{\text{moon}}} \\
    v_{\textrm{earth}} = v_{\text{moon and earth}} + v^{'}_{\textrm{earth}} = \frac{2\pi R_{\text{es}}}{T_{\text{earth}}} + \frac{2\pi\frac{1}{1 + 1/\mu}R_{\text{me}}}{T_{\text{moon}}}
\end{align}\]

<p>ごちゃごちゃとしているが、月と地球、それらの重心に対して円軌道の半径と周期から速さを求めただけである。</p>

<h2 id="計算方法">計算方法</h2>
<h3 id="解くべき式">解くべき式</h3>
<p>月と地球に対して運動方程式を立てる。3体の間に働く万有引力を考えれば良い：</p>

\[\begin{align}
    \text{Moon:}~&amp; \mu m \ddot{x_\textrm{moon}} = - \frac{Gm\mu m}{((x_\textrm{moon} - x_\textrm{earth})^2 + (y_\textrm{moon} - y_\textrm{earth})^2){}^{3/2}}(x_\textrm{moon} - x_\textrm{earth}) - \frac{GM\mu m}{(x_\textrm{moon}{}^2 + y_\textrm{moon}{}^2)^{3/2}}x_\textrm{moon} \\
    &amp; \mu m \ddot{y_\textrm{moon}} = - \frac{Gm\mu m}{((x_\textrm{moon} - x_\textrm{earth})^2 + (y_\textrm{moon} - y_\textrm{earth})^2){}^{3/2}}(y_\textrm{moon} - y_\textrm{earth}) - \frac{GM\mu m}{(x_\textrm{moon}{}^2 + y_\textrm{moon}{}^2)^{3/2}}y_\textrm{moon} \\
    \text{Earth:}~&amp; m \ddot{x_\textrm{earth}} = - \frac{Gm\mu m}{((x_\textrm{moon} - x_\textrm{earth})^2 + (y_\textrm{moon} - y_\textrm{earth})^2){}^{3/2}}(x_\textrm{earth} - x_\textrm{moon}) - \frac{GMm}{(x_\textrm{earth}{}^2 + y_\textrm{earth}{}^2)^{3/2}}x_\textrm{earth} \\
    &amp; m \ddot{y_\textrm{earth}} = - \frac{Gm\mu m}{((x_\textrm{moon} - x_\textrm{earth})^2 + (y_\textrm{moon} - y_\textrm{earth})^2){}^{3/2}}(y_\textrm{earth} - y_\textrm{moon}) - \frac{GMm}{(x_\textrm{earth}{}^2 + y_\textrm{earth}{}^2)^{3/2}}y_\textrm{earth}
\end{align}\]

<p>天体間の距離は上で示した定数を用いてもよいかも知れない。</p>

<h3 id="プログラム">プログラム</h3>
<p>C++言語で計算を行い、Pythonでグラフアニメーションを作成した。</p>

<p>まず、C++。微分方程式の数値計算には Boost ライブラリの <code class="language-plaintext highlighter-rouge">boost/numeric/odeint.hpp</code> を用いた。簡単に数値解が計算でき非常に便利。使い方は解説ページ<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>やドキュメント<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">2</a></sup>を参考にした。参考までに、実装の重要な部分を紹介。便利さが分かると思う。ソースコード全体は<a href="https://github.com/skrbcr/blog/blob/main/docs/assets/2022-08-29-moon_orbit/main.cpp">こちら</a>。</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">class</span> <span class="nc">ThreeBody</span> <span class="p">{</span>
<span class="nl">private:</span>
    <span class="kt">double</span> <span class="n">M</span><span class="p">;</span>       <span class="c1">// 恒星質量</span>
    <span class="kt">double</span> <span class="n">m1</span><span class="p">;</span>      <span class="c1">// 惑星質量</span>
    <span class="kt">double</span> <span class="n">m2</span><span class="p">;</span>      <span class="c1">// 衛星質量</span>

<span class="nl">public:</span>
    <span class="c1">// 月と地球に対して、位置が2変数ずつ、速度も2変数ずつの計8変数が必要。</span>
    <span class="k">using</span> <span class="n">state</span> <span class="o">=</span> <span class="n">std</span><span class="o">::</span><span class="n">array</span><span class="o">&lt;</span><span class="kt">double</span><span class="p">,</span> <span class="mi">8</span><span class="o">&gt;</span><span class="p">;</span>
    <span class="n">ThreeBody</span><span class="p">(</span><span class="kt">double</span> <span class="n">M</span><span class="p">,</span> <span class="kt">double</span> <span class="n">m1</span><span class="p">,</span> <span class="kt">double</span> <span class="n">m2</span><span class="p">)</span> <span class="p">{</span>
        <span class="k">this</span><span class="o">-&gt;</span><span class="n">M</span> <span class="o">=</span> <span class="n">M</span><span class="p">;</span>
        <span class="k">this</span><span class="o">-&gt;</span><span class="n">m1</span> <span class="o">=</span> <span class="n">m1</span><span class="p">;</span>
        <span class="k">this</span><span class="o">-&gt;</span><span class="n">m2</span> <span class="o">=</span> <span class="n">m2</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="kt">void</span> <span class="k">operator</span><span class="p">()(</span><span class="k">const</span> <span class="n">state</span><span class="o">&amp;</span> <span class="n">x</span><span class="p">,</span> <span class="n">state</span><span class="o">&amp;</span> <span class="n">dx</span><span class="p">,</span> <span class="kt">double</span> <span class="n">t</span><span class="p">)</span> <span class="p">{</span>
        <span class="kt">double</span> <span class="n">r_me</span> <span class="o">=</span> <span class="n">pow</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="mf">2.</span><span class="p">)</span> <span class="o">+</span> <span class="n">pow</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="mf">2.</span><span class="p">);</span>
        <span class="kt">double</span> <span class="n">r_es</span> <span class="o">=</span> <span class="n">pow</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="mf">2.</span><span class="p">)</span> <span class="o">+</span> <span class="n">pow</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span> <span class="mf">2.</span><span class="p">);</span>
        <span class="kt">double</span> <span class="n">r_ms</span> <span class="o">=</span> <span class="n">pow</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span> <span class="mf">2.</span><span class="p">)</span> <span class="o">+</span> <span class="n">pow</span><span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span> <span class="mf">2.</span><span class="p">);</span>
        <span class="c1">// 位置座標の微分＝速度 dx1 / dt = u1</span>
        <span class="n">dx</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="mi">4</span><span class="p">];</span>
        <span class="n">dx</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="mi">5</span><span class="p">];</span>
        <span class="n">dx</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="mi">6</span><span class="p">];</span>
        <span class="n">dx</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="n">x</span><span class="p">[</span><span class="mi">7</span><span class="p">];</span>
        <span class="c1">// 速度の微分＝加速度 運動方程式を実装</span>
        <span class="n">dx</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span> <span class="n">G</span> <span class="o">*</span> <span class="n">m2</span> <span class="o">/</span> <span class="n">pow</span><span class="p">(</span><span class="n">r_me</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span> <span class="o">-</span> <span class="n">G</span> <span class="o">*</span> <span class="n">M</span> <span class="o">/</span> <span class="n">pow</span><span class="p">(</span><span class="n">r_es</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">*</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
        <span class="n">dx</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span> <span class="n">G</span> <span class="o">*</span> <span class="n">m2</span> <span class="o">/</span> <span class="n">pow</span><span class="p">(</span><span class="n">r_me</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">3</span><span class="p">])</span> <span class="o">-</span> <span class="n">G</span> <span class="o">*</span> <span class="n">M</span> <span class="o">/</span> <span class="n">pow</span><span class="p">(</span><span class="n">r_es</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">*</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span>
        <span class="n">dx</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span> <span class="n">G</span> <span class="o">*</span> <span class="n">m1</span> <span class="o">/</span> <span class="n">pow</span><span class="p">(</span><span class="n">r_me</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span> <span class="o">-</span> <span class="n">G</span> <span class="o">*</span> <span class="n">M</span> <span class="o">/</span> <span class="n">pow</span><span class="p">(</span><span class="n">r_ms</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">*</span> <span class="n">x</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span>
        <span class="n">dx</span><span class="p">[</span><span class="mi">7</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span> <span class="n">G</span> <span class="o">*</span> <span class="n">m1</span> <span class="o">/</span> <span class="n">pow</span><span class="p">(</span><span class="n">r_me</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">x</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span> <span class="o">-</span> <span class="n">x</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span> <span class="o">-</span> <span class="n">G</span> <span class="o">*</span> <span class="n">M</span> <span class="o">/</span> <span class="n">pow</span><span class="p">(</span><span class="n">r_ms</span><span class="p">,</span> <span class="mf">1.5</span><span class="p">)</span> <span class="o">*</span> <span class="n">x</span><span class="p">[</span><span class="mi">3</span><span class="p">];</span>
    <span class="p">}</span>
<span class="p">};</span>
</code></pre></div></div>

<p>計算ができれば、あとは Python でグラフにするだけ。ソースコードは<a href="https://github.com/skrbcr/blog/blob/main/docs/assets/2022-08-29-moon_orbit/animation.py">こちら</a>。</p>

<h2 id="result">シミュレーション結果</h2>
<p>月が赤丸、地球が青丸、真ん中の黄色い丸が太陽。</p>
<center>
    <video src="/blog/assets/2022-08-29-moon_orbit/mes.mp4" controls="" style="width: 70%;"></video>
</center>

<p>分かりにくいので、月の軌道を大袈裟にしてみると</p>
<center>
    <video src="/blog/assets/2022-08-29-moon_orbit/mes2.mp4" controls="" style="width: 70%;"></video>
</center>

<p>月は地球の（ほぼ）円軌道を縫うようにして進むことが分かる。地球の周りを回っているから、下図のようにコイルのような環状の軌道を描くのかと思いきや、寧ろ地球と一緒に太陽の周りを回っている印象である。太陽から地球と月を観測したら共に太陽の周りを回っているかのように錯覚しそうだ。そうはいっても、もちろん月は主に地球の重力に捕われているのであって、太陽から受ける重力の方が小さい（およそ半分）。</p>

<center>
<img src="/blog/assets/2022-08-29-moon_orbit/orbit1.svg" style="width: 45%" />
<img src="/blog/assets/2022-08-29-moon_orbit/orbit2.svg" style="width: 45%" />
<p>左のような軌道を描きそうだが、右の方が実際に近いことが分かった</p>
<hr class="separator" />
</center>

<p>地球を常に中心においたグラフのアニメーションも見ておく。やはり月は地球の周りを回っている。それは間違いないようだ。</p>
<center>
    <video src="/blog/assets/2022-08-29-moon_orbit/me.mp4" controls="" style="width: 70%;"></video>
</center>

<h2 id="まとめなど">まとめなど</h2>
<p>地球の周りを回転する月の、太陽から見た軌道を調べた。太陽から見た月は、地球に寄り添うようにして太陽の周りを回っているように見えることが分かった。</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p><a href="https://qiita.com/hmito/items/483445ac0d42fb4428a5">C++で常微分方程式：boost::odeint入門 ― Qiita</a>：一通りのことが分かりやすく解説されている <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:2" role="doc-endnote">
      <p><a href="https://www.boost.org/doc/libs/1_80_0/libs/numeric/odeint/doc/html/index.html">Chapter 1. Boost.Numeric.Odeint（ドキュメント）</a>：分量が膨大ですが公式ドキュメント <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="physics" /><summary type="html"><![CDATA[調べること 月の軌道を、地球や太陽との万有引力を考えて計算する。以下、煩雑な記号が乱れ飛びます。結果までジャンプ。]]></summary></entry><entry><title type="html">城ヶ島 天体撮影 2022夏</title><link href="https://skrbcr.github.io/blog/astron/jogasima" rel="alternate" type="text/html" title="城ヶ島 天体撮影 2022夏" /><published>2022-07-31T00:00:00+09:00</published><updated>2022-07-31T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/astron/jogasima</id><content type="html" xml:base="https://skrbcr.github.io/blog/astron/jogasima"><![CDATA[<center>
<img src="/blog/assets/2022-07-31-jogasima/milkyway3.jpg" alt="天の川とさそり座" style="width: 90%;" />
<p>Nikon Z50; F3.5, 20秒×12枚（240秒）, ISO 1600<br />天の川とさそり座（右）<br />いて座も写っています</p>
<hr style="width: 50%" /><p></p>
</center>

<p>週末に城ヶ島（神奈川県三浦市）で家族と天体撮影を行いました。初めての天体撮影（＆天体観測）でしたが、天気が良くトラブルなく撮影できました。</p>

<p>天体写真だけ興味ある人は<a href="#撮影">スキップ</a>。</p>

<h2 id="撮影の概要">撮影の概要</h2>
<h3 id="行程">行程</h3>
<ul>
  <li>夕方：自動車にて城ヶ島着。城ヶ島灯台を観光、撮影地の下見。</li>
  <li>日没30分後：撮影道具一式を持って来て撮影開始。</li>
  <li>撮影中：天の川、さそり座、夏の大三角、木星、アンドロメダ銀河などを撮影。</li>
  <li>23時ごろ：撮影終了。帰宅開始。</li>
</ul>

<h3 id="使用機材">使用機材</h3>
<ul>
  <li>カメラ Nikon Z50</li>
  <li>三脚</li>
  <li>ポータブル赤道儀（Vixen POLARIE）</li>
  <li>双眼鏡（星を探すのに便利）</li>
</ul>

<p>機材が揃っているのは家族のお陰です（ありがとう）。望遠鏡は持参していないです。天の川とか夏の大三角とかが狙いだったので。</p>

<h3 id="撮影地">撮影地</h3>
<p>神奈川県三浦市の城ヶ島で撮影を行いました。色々なサイトを見たところ、城ヶ島は東京近郊でのアクセスのしやすさと空の暗さを兼ね備えた、数少ない撮影地のようです。城ヶ島は南側が海なので地平線から天頂まで光害が少ないです。ただし、旅客機が飛び交っているため、天の川など低い角度を写すと写り込んできます（後述）。その他、船舶や伊豆大島（？）の街の光がありますが、私のような入門者にとっては気にならない程度のものです。反対に北側は横浜などによる光害が強く、見られる・撮影できる星の数は減ります。</p>

<h2 id="観光">観光</h2>
<p>到着後すぐに「城ヶ島灯台」を観光しました。100年以上前からこの場所に灯台があるようですが、今も現役です。夕暮れ時の灯台は情緒を感じさせるものがありますし、灯台から眺める海岸は佳景です。ちなみに、灯台からほど近いところで撮影していたため、灯台の光でしっかり照らされていました（当たり前ですが光が目に入るとまぶしいです）。</p>

<center><img src="/blog/assets/2022-07-31-jogasima/lighthouse.jpg" alt="城ヶ島灯台" style="width: 70%;" />
<p>城ヶ島灯台</p>
<hr style="width: 50%" /><p></p></center>

<p>撮影地は灯台の南東の海岸でした。灯台のある高台から見下ろしたのが下の写真です。</p>

<center><img src="/blog/assets/2022-07-31-jogasima/sea.jpg" alt="灯台から見下ろした海岸" style="width: 70%;" />
<p>灯台から見下ろした岩場の海岸<br />南側が開けている</p>
<!-- <hr style="width: 50%"><p></p> -->
</center>

<h2 id="撮影">撮影</h2>
<center><img src="/blog/assets/2022-07-31-jogasima/milkyway1.jpg" alt="天の川とさそり座" style="width: 90%;" />
<p>Nikon Z50; 16mm, F3.5, 20秒×12枚（240秒）, ISO 1600</p></center>
<p>天の川とさそり座。右中央のアンタレスもオレンジ色に輝いています。幾つかの星雲・星団も写っているようですね。撮影地の節で述べたように、城ヶ島南部は多数の旅客機が飛び交っており、撮影した天の川にも写り込んでいました。調べたところ、スタック<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">1</a></sup>の方法によってはこのような光を消すことができることが分かったので、実際にやってみたのがこの画像です。</p>
<center><hr style="width: 50%" /><p></p></center>

<center><img src="/blog/assets/2022-07-31-jogasima/milkyway2.jpg" alt="天の川" style="width: 40%;" />
<p>Nikon Z50; 16mm, F3.5, 20秒×6枚（120秒）, ISO 1600</p></center>
<p>こちらはカメラを縦にして撮った天の川。左下にちょこっと地面が写っています。</p>
<center><hr style="width: 50%" /><p></p></center>

<center><img src="/blog/assets/2022-07-31-jogasima/milkyway_center.jpg" alt="天の川中心部" style="width: 90%;" />
<p>Nikon Z50; 50mm, F6.3, 20秒×4枚（80秒）, ISO 1600</p></center>
<p>天の川銀河の中心部。ノイズが多いです。露出不足のため？　編集でかなり明るくしています。ISOを上げるべきかもですね。ちなみに、これは編集で赤を少し強くしてみたものです。</p>
<center><hr style="width: 50%" /><p></p></center>

<center><img src="/blog/assets/2022-07-31-jogasima/daisankaku.jpg" alt="夏の大三角（ベガ・アルタイル・デネブ）と天の川" style="width: 90%;" />
<p>Nikon Z50; 16mm, F3.5, 20秒×6枚（120秒）, ISO 1600</p></center>
<p>夏の大三角。ひときわ明るいベガ・アルタイル・デネブと天の川が写っていますね。</p>
<center><hr style="width: 50%" /><p></p></center>

<center><img src="/blog/assets/2022-07-31-jogasima/andromeda.jpg" alt="アンドロメダ銀河" style="width: 90%;" />
<p>Nikon Z50; 210mm, F3.5, 10秒×12枚（120秒）, ISO 3200</p></center>
<p>アンドロメダ銀河・・・なのですが流石にこれが限界でした。中央付近の最も明るいものがアンドロメダ銀河です。明るい中心部とぼやっとした円盤部（円盤のようには見えないけれど）が写っています。双眼鏡を使えば目でも見ることができました。</p>
<center><hr style="width: 50%" /><p></p></center>

<center><img src="/blog/assets/2022-07-31-jogasima/jupyter.jpg" alt="出現する木星" style="width: 90%;" />
<p>Nikon Z50; 50mm, F6.3, 20秒×3枚（60秒）, ISO 1600</p></center>
<p>東の丘から昇ってくる木星。非常に明るく肉眼でも存在感があります。さらに瞬かないのですぐに惑星だと分かります。具体的に木星だとは、スマホのアプリで調べて分かりました。便利です。</p>
<center><hr style="width: 50%" /><p></p></center>

<center><img src="/blog/assets/2022-07-31-jogasima/diurnal_motion.jpg" alt="北極星周りの日周運動" style="width: 90%;" />
<p>Nikon Z50; 50mm, F6.3, 328.7秒（マニュアル）, ISO 100</p></center>
<p>星々の日周運動。中央の明るい点が北極星です。ポータブル赤道儀を外し、カメラを三脚に固定したまま5分間露出して撮りました。本当はもっと長時間露出して軌跡を撮るべきでしたね。あと、特に明るさをいじっていないので、眼を凝らして見てください（笑）</p>

<h2 id="編集について">編集について</h2>
<p>画像編集は、スタックを<a href="http://deepskystacker.free.fr/english/index.html" target="_blank">Deep Sky Stacker</a>、その後の編集を<a href="http://gimp.org/" target="_blank">Gimp</a>で行いました。どちらも無料です。星空写真の編集は始めてだったので、ネットの情報を見ながら適当にやった感じです。少しずつ知識を付けたいですね。</p>

<h2 id="感想">感想</h2>
<p>普段見る星空は、空自体が光って見えるほど光害を受けたものだったので、たくさんの星がきらめく夜空を見ることができて大満足です。特に天の川を肉眼で見たのは生まれて初めてのことだったので嬉しかったです。光量の不足のような反省点を踏まえて、また星空を撮りに行こうと思います。</p>

<p>あと、画像の四隅が暗くなるのは補正できるようなので、暇なときに再編集してみます。また、思いついたときに写真や文章を追加するかもしれません。追加しないかもしれません。</p>

<p><strong>追記</strong><br />
四隅の明るさ補正や、その他のいくつかの編集を試してみました。冒頭の写真がこれです。</p>
<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:1" role="doc-endnote">
      <p>同じ画像を複数枚撮って重ね合わせることで、ノイズの低減を行う編集手法。物理実験での複数回の測定みたいなものだと思っています。 <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="astron" /><summary type="html"><![CDATA[Nikon Z50; F3.5, 20秒×12枚（240秒）, ISO 1600天の川とさそり座（右）いて座も写っています]]></summary></entry><entry><title type="html">円筒まわりの定常流</title><link href="https://skrbcr.github.io/blog/physics/cylinder_flow" rel="alternate" type="text/html" title="円筒まわりの定常流" /><published>2022-07-22T00:00:00+09:00</published><updated>2022-07-22T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/physics/cylinder_flow</id><content type="html" xml:base="https://skrbcr.github.io/blog/physics/cylinder_flow"><![CDATA[<h2 id="調べること">調べること</h2>
<p>流体力学の講義で複素速度ポテンシャルを学習した。具体例として、一様流のなかに円筒を置いた場合の流れを計算した。そこで、コンピュータで流れを計算・描画してみることにした。コード（Python）は<a href="https://github.com/skrbcr/blog/blob/main/docs/assets/2022-07-22-cylinder_flow/cylinder.py">こちら</a>。</p>

<p>内容の薄い記事だが、作りかけで放置状態だったのでとりあえず文章をまとめて公開することにした。</p>

<h2 id="一様流中に置かれた円筒周りの流れ">一様流中に置かれた円筒周りの流れ</h2>
<p>二次元平面上に一様な流れを考える。流れ（左図）や各点での流体の速度（右図。左図よりも2倍拡大してあることに注意）を図示すると、下図のようになる：</p>
<center><img src="/blog/assets/2022-07-22-cylinder_flow/uniform_flow_stream.svg" style="width: 50%" /><img src="/blog/assets/2022-07-22-cylinder_flow/uniform_flow_quiver.svg" style="width: 50%" /></center>
<p>この一様流の中に、中身の詰まった円を入れてみる。あるいは、円筒を置いてみる。流れは直感通り、次のようになる：</p>
<center><img src="/blog/assets/2022-07-22-cylinder_flow/norm_stream.svg" style="width: 50%" /><img src="/blog/assets/2022-07-22-cylinder_flow/norm_quiver.svg" style="width: 50%" /></center>
<p>左の図からは、流体が円筒（円）を避けるようにして流れていることがわかる。右の図からは、円筒表面では流速が $0$ になる淀み点 $(-1, 0), (1, 0)$ と一様流の速さ（例えば $(2.0, 2.0)$ あたり）よりも大きくなる点 $(0, -1), (0, 1)$ があることがわかる。</p>

<h2 id="循環を加える">循環を加える</h2>
<p>前節の流れに下図のような渦糸（循環）を加えてみる。</p>
<center><img src="/blog/assets/2022-07-22-cylinder_flow/rot_stream.svg" style="width: 50%" /><img src="/blog/assets/2022-07-22-cylinder_flow/rot_quiver.svg" style="width: 50%" /></center>
<p>このとき、流れの様子は、循環の大きさにより変化する。</p>

<h3 id="循環が小さい場合">循環が小さい場合</h3>
<center><img src="/blog/assets/2022-07-22-cylinder_flow/rot_weak_stream.svg" style="width: 50%" /><img src="/blog/assets/2022-07-22-cylinder_flow/rot_weak_quiver.svg" style="width: 50%" /></center>
<p>循環流と一様流の向きが同じとなる上側では流速が速くなり、下側では遅くなる。ここまでは直感的な結果が得られている。</p>

<h3 id="循環が特別な大きさの場合">循環が特別な大きさの場合</h3>
<center><img src="/blog/assets/2022-07-22-cylinder_flow/rot_med_stream.svg" style="width: 50%" /><img src="/blog/assets/2022-07-22-cylinder_flow/rot_med_quiver.svg" style="width: 50%" /></center>
<p>循環の流速を上げていくと、やがて円筒下部に特徴的な流れが出現する。左側の流れと右側の流れがぶつかり合う点ができる。具体的な循環の大きさは、流速を $U$、円筒の半径を $a$ とすると $\Gamma = 4\pi Ua$。</p>

<h3 id="循環が大きい場合">循環が大きい場合</h3>
<center><img src="/blog/assets/2022-07-22-cylinder_flow/rot_strong_stream.svg" style="width: 50%" /><img src="/blog/assets/2022-07-22-cylinder_flow/rot_strong_quiver.svg" style="width: 50%" /></center>
<p>さらに循環の流速を上げると円筒下部の淀み点は円筒から離れた位置に移動する。直感的には分かりずらい流れが発生している。</p>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="physics" /><summary type="html"><![CDATA[調べること 流体力学の講義で複素速度ポテンシャルを学習した。具体例として、一様流のなかに円筒を置いた場合の流れを計算した。そこで、コンピュータで流れを計算・描画してみることにした。コード（Python）はこちら。]]></summary></entry><entry><title type="html">Jekyll を用いて GitHub Pages に記事を投稿する</title><link href="https://skrbcr.github.io/blog/manage/create_new_post" rel="alternate" type="text/html" title="Jekyll を用いて GitHub Pages に記事を投稿する" /><published>2022-05-05T00:00:00+09:00</published><updated>2022-05-05T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/manage/create_new_post</id><content type="html" xml:base="https://skrbcr.github.io/blog/manage/create_new_post"><![CDATA[<p><a href="https://skrbcr.github.io/blog/manage/setup_pages">Jekyll のインストールから GitHub Pages での公開まで</a> のつづき。やはりメモ書きなので必要な情報は網羅されていません。</p>

<h2 id="実行環境">実行環境</h2>

<table>
  <thead>
    <tr>
      <th style="text-align: center">ソフト</th>
      <th style="text-align: center">バージョン</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">OS</td>
      <td style="text-align: center">Windows 11 Home</td>
    </tr>
    <tr>
      <td style="text-align: center">Ruby</td>
      <td style="text-align: center">3.1.0p0</td>
    </tr>
    <tr>
      <td style="text-align: center">Jekyll</td>
      <td style="text-align: center">4.2.1</td>
    </tr>
    <tr>
      <td style="text-align: center">GitHub Desktop</td>
      <td style="text-align: center">3.0.0</td>
    </tr>
    <tr>
      <td style="text-align: center">Visual Studio Code</td>
      <td style="text-align: center">1.66.2</td>
    </tr>
  </tbody>
</table>

<p>Visual Studio Code を使って記事を作成しています。なお、Ruby がアップデートされていないです。</p>

<h2 id="作業の流れ">作業の流れ</h2>
<ol>
  <li><code class="language-plaintext highlighter-rouge">_posts</code> フォルダ内にファイル作成</li>
  <li>記事の中身を書く</li>
  <li>変更を commit して push</li>
  <li>投稿完了</li>
</ol>

<p>結局は <a href="https://jekyllrb.com/docs/posts/">Posts - Jekyll</a> に従えばよい。</p>

<h2 id="作業過程">作業過程</h2>
<p>まず、プロジェクト内の <code class="language-plaintext highlighter-rouge">_posts</code> フォルダに Markdown や HTML のファイルを作成する。ファイル名は <code class="language-plaintext highlighter-rouge">YYYY-MM-DD-title.md</code> つまり <code class="language-plaintext highlighter-rouge">2022-05-05-physics.md</code> のような形式にする。</p>

<p>記事の中身を書いていく。冒頭部には次のように書く。これにより、Jekyll がタイトルや投稿日などを自動的に設定してくれる：</p>

<div class="language-md highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="s">post</span>
<span class="na">title</span><span class="pi">:</span> <span class="s2">"</span><span class="s">アヒルの観察"</span>
<span class="na">date</span><span class="pi">:</span> <span class="s">2022-05-05</span>
<span class="na">categories</span><span class="pi">:</span> <span class="s">physics</span>
<span class="nn">---</span>

（ここから記事の中身を書く）みなさんはアヒルが好きですか？　私は好きでも嫌いでもないです。
・・・・・・
・・・
</code></pre></div></div>

<p>ところで、記事中に画像などを挿入したい場合は、それらを <code class="language-plaintext highlighter-rouge">assets</code> フォルダ内に入れておくことで使えるようになる（こちらはファイル名の指定はない）。例として、このサイト <code class="language-plaintext highlighter-rouge">https://skrbcr.github.io/blog/</code> で記事を作成していて、画像 <code class="language-plaintext highlighter-rouge">awsome_photo.jpg</code> を使いたい場合。<code class="language-plaintext highlighter-rouge">assets</code> フォルダに <code class="language-plaintext highlighter-rouge">awsome_photo.jpg</code> を入れておけば、<code class="language-plaintext highlighter-rouge">https://skrbcr.github.io/blog/assets/awsome_photo.jpg/</code> で画像が利用できるようになる。つまり</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"https://skrbcr.github.io/blog/assets/awsome_photo.jpg/"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<p>と書けば、そこに画像が表示される。</p>

<p>記事が書けたら commit し、GitHub の Repository に push すれば投稿完了。</p>

<p>暫くすると反映されるので、実際の投稿を確認して終了。</p>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="manage" /><summary type="html"><![CDATA[Jekyll のインストールから GitHub Pages での公開まで のつづき。やはりメモ書きなので必要な情報は網羅されていません。]]></summary></entry><entry><title type="html">熱拡散方程式を数値的に解く</title><link href="https://skrbcr.github.io/blog/physics/heat_equation" rel="alternate" type="text/html" title="熱拡散方程式を数値的に解く" /><published>2022-05-01T00:00:00+09:00</published><updated>2022-05-01T00:00:00+09:00</updated><id>https://skrbcr.github.io/blog/physics/heat_equation</id><content type="html" xml:base="https://skrbcr.github.io/blog/physics/heat_equation"><![CDATA[<h2 id="熱拡散方程式とは">熱拡散方程式とは</h2>
<p>（物理数学の授業で習っただけの知識なので、かなり浅いですが……）</p>

<p>熱の拡散の様子を表す微分方程式。熱分布の時間変化が空間的勾配を用いて表現される。あるいは、熱の空間的な分布（勾配）が時間変化によって表現される。そのため、式中に時間と空間の微分が現れる。この微分方程式は解析的に解くことが出来るが、ここでは数値的な解によるシミュレーションを行う。</p>

<h3 id="基本の熱拡散方程式">基本の熱拡散方程式</h3>
<p>外部からの熱の供給や吸収がなく単純に熱が拡がっていく場合。熱の拡散速度に関する定数 $\kappa$ を用いて以下の式で与えられる：</p>

\[\begin{equation}
    \pdv{}{t} u(t, x) = \kappa\ppdv{2}{}{x}u(t, x)
\end{equation}\]

<p>境界条件や初期条件を与えたり $\kappa$ の値を指定したりして解くことで、様々な条件下での熱の拡がりかたを求めることができる。</p>

<h3 id="熱の湧き出しがある場合">熱の湧き出しがある場合</h3>
<p>ヒーターなどで常に一定の熱が供給されている場合を考える。点 $x$ における熱の供給率を $q(x)$ とおく。このとき</p>

\[\begin{align}
    \pdv{u}{t} = q(x)
\end{align}\]

<p>であるから、熱拡散方程式は次になる：</p>

\[\begin{align}
    \pdv{}{t} u(t, x) = \kappa\ppdv{2}{}{x}u(t, x) + q(x)
\end{align}\]

<h2 id="微分方程式の数値解">微分方程式の数値解</h2>
<h3 id="熱の湧き出しなし">熱の湧き出しなし</h3>
<p>最初に述べた通り、微分方程式を数値的に解く。簡便な方法であるオイラー陽解法を採用する。<br />
オイラー法の通常の手順に従う。まず、次の近似式が成立することに注目する：</p>

\[\begin{align}
    \pdv{}{x} u(t, x) \sim \frac{u(t, x + \Delta x) - u(t, x)}{\Delta x}
\end{align}\]

<p>この近似を式 $(1)$ に適用する：</p>

\[\begin{align}
    \frac{u(t + \Delta t, x) - u(t, x)}{\Delta t} &amp;\sim \kappa\pdv{}{x}\frac{u'(t, x + \Delta x) - u'(t, x)}{\Delta x} \nonumber\\
    &amp;\sim \kappa\frac{1}{\Delta x}\left(\frac{u(t, x + 2\Delta x) - u(t, x + \Delta x)}{\Delta x} - \frac{u(t, x + \Delta x) - u(t, x)}{\Delta x}\right) \nonumber\\
    &amp;= \kappa\frac{u(t, x + 2\Delta x) - 2u(t, x + \Delta x) + u(t, x)}{\left(\Delta x\right)^2}
\end{align}\]

<p>さらに、変形を行うと、必要な近似式が得られる：</p>

\[\begin{align}
    u(t + \Delta t, x) = u(t, x) + \frac{\kappa\Delta t}{\left(\Delta x\right)^2}\big[u(t, x + 2\Delta x) - 2u(t, x + \Delta x) + u(t, x)\big]
\end{align}\]

<p>この式を用いれば現在時刻の熱分布から、$\Delta t$ 経過後の熱分布が求まる。</p>

<h3 id="熱の湧き出しあり">熱の湧き出しあり</h3>
<p>いまやったのと同じ近似を式 $(3)$ に適用すれば、近似式が得られる：</p>

\[\begin{align}
    &amp;u(t + \Delta t, x)\nonumber\\ =&amp; u(t, x) + \frac{\kappa\Delta t}{\left(\Delta x\right)^2}\big[u(t, x + 2\Delta x) - 2u(t, x + \Delta x) + u(t, x)\big] + q(x)\Delta t
\end{align}\]

<h2 id="シミュレーション">シミュレーション</h2>
<p>Pythonを用いてシミュレーションした。どの計算においても境界条件は、有限の区間を考え、区間の両端では常に熱は $0$ であるとした。結果は、横軸に $x$ 座標、縦軸に $u(t, x)$ をとったグラフで表し、時間変化をアニメーション（動画）で示す。</p>

<h3 id="熱の湧き出しなし-1">熱の湧き出しなし</h3>
<p>2つの初期条件でシミュレートを行った。</p>

<h4 id="初期条件１">初期条件１</h4>
<p>初期条件：</p>

\[\begin{align}
    \begin{cases}
        u(x) = 4 \quad &amp; for~ -2\le x \le 2 \\
        u(x) = 0 \quad &amp; for~ x &lt; -2,~2 &lt; x
    \end{cases}
\end{align}\]

<p>$4$ や $2$ という数字に意味はない（適当なスケーリングがされているだけ）。この $t = 0$ での状態をグラフで表す。縦軸に熱の量 $u(x)$、横軸に位置座標 $x$ をとる。</p>
<center><img src="/blog/assets/2022-05-01-heat_equation/湧き出しなし_初期条件1.svg" style="width: 70%;" /></center>
<p>グラフは、「高い部分＝熱い部分」と見なせばよいと思う。</p>

<p>では、時間を進めると熱がどのように拡散していくかをシミュレートする。式 $(7)$ において $\Delta t = dt = 0.001,~\Delta x = dx = 0.01$ として計算した結果が下の動画：</p>
<center><video src="/blog/assets/2022-05-01-heat_equation/heat1_slow.mp4" controls="" style="width: 70%;"></video></center>
<p>$u = 0$ と $u = 4$ の境界辺りから熱がゆっくりと拡がっていくのが分かる。</p>

<p>条件はそのままに、シミュレートの時間間隔を大きくしてする。$\Delta t = dt = 0.01,~\Delta x = dx = 0.05$ として計算した：</p>
<center><video src="/blog/assets/2022-05-01-heat_equation/heat1.mp4" controls="" style="width: 70%;"></video></center>
<p>矩形のグラフが丸みを帯びていく様子が見られる。</p>

<h4 id="初期条件2">初期条件2</h4>
<p>初期条件：</p>

\[\begin{align}
    \begin{cases}
        u(x) = x + 4  \quad &amp; for~ -4\le x \le 0 \\
        u(x) = -x + 4 \quad &amp; for~ 0\le x\le 4 \\
        u(x) = 0 \quad &amp; for~ x &lt; -4,~4 &lt; x
    \end{cases}
\end{align}\]

<center><img src="/blog/assets/2022-05-01-heat_equation/湧き出しなし_初期条件2.svg" style="width: 70%;" /></center>

<p>上でやったのと同じように、$\Delta t = 0.01,~\Delta x = 0.05$ として（以下のシミュレーションでもこの数値を用いる）計算する：</p>
<center><video src="/blog/assets/2022-05-01-heat_equation/heat2.mp4" controls="" style="width: 70%;"></video></center>
<p>やはり、時間経過とともにグラフは丸みを帯びてゆく。</p>

<p>また、二つの初期条件において $t = 0$ でのグラフの形は異なるが、どちらも徐々にガウス関数に近い形に変形していくように見える。それには何か理由があるのか、それともただの思い違いなのかは知らない。</p>

<h3 id="熱の湧き出しあり-1">熱の湧き出しあり</h3>
<p>点または区間から一定の熱が供給され続ける場合のシミュレーション。</p>

<h4 id="条件1">条件1</h4>
<p>空間全体は最初熱を持たず、一点からの熱供給が絶えず行われている場合を考える。</p>
<center><video src="/blog/assets/2022-05-01-heat_equation/heat3.mp4" controls="" style="width: 70%;"></video></center>
<p>一点から鋭いピークが出現する。湧き出しがない時のような丸みを帯びたグラフへは変化しない。</p>

<h4 id="条件2">条件2</h4>
<p>条件1と同じ設定で、熱の湧き出しを点ではなく区間（$2\le x\le 3$）とした。</p>
<center><video src="/blog/assets/2022-05-01-heat_equation/heat4.mp4" controls="" style="width: 70%;"></video></center>
<p>時間経過とともに山のピークがどんどん鋭くなるようだ。延々と続ければ、グラフの形は条件1にに限りなく近づいていくはず。</p>

<h2 id="与太話">与太話</h2>
<p>色々な初期条件・境界条件で試すと面白いはず。それと、拡散方程式に関して気になっていることもある。が、今回はここまでにしておく。</p>

<p>Python コード：</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">from</span> <span class="nn">matplotlib</span> <span class="kn">import</span> <span class="n">pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="nn">matplotlib.animation</span> <span class="kn">import</span> <span class="n">FuncAnimation</span>

<span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="n">subplots</span><span class="p">()</span>

<span class="n">dx</span> <span class="o">=</span> <span class="mf">0.5</span>    <span class="c1"># 刻み幅（位置）
</span><span class="n">dt</span> <span class="o">=</span> <span class="mf">0.1</span>    <span class="c1"># 刻み幅（時間）
</span><span class="n">kappa</span> <span class="o">=</span> <span class="mf">0.05</span>    <span class="c1"># 拡散の定数
</span><span class="n">cons</span> <span class="o">=</span> <span class="p">(</span><span class="n">dt</span> <span class="o">/</span> <span class="n">dx</span><span class="p">)</span> <span class="o">*</span> <span class="p">(</span><span class="n">kappa</span> <span class="o">/</span> <span class="n">dx</span><span class="p">)</span>

<span class="n">x</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="o">-</span><span class="mi">10</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">dx</span><span class="p">)</span>
<span class="n">u</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">zeros</span><span class="p">(</span><span class="n">x</span><span class="p">.</span><span class="n">size</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">update</span><span class="p">(</span><span class="n">n</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">n</span> <span class="o">!=</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">u</span><span class="p">.</span><span class="n">size</span> <span class="o">-</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">):</span>
            <span class="n">u</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+=</span> <span class="p">(</span><span class="n">u</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">u</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">u</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span> <span class="o">*</span> <span class="n">cons</span>
            <span class="c1"># 湧き出しがある場合
</span>            <span class="c1">#if 2 &lt;= x[i] &lt;= 3:
</span>            <span class="c1">#    u[i] += 0.01 * dt
</span>    
    <span class="n">ax</span><span class="p">.</span><span class="n">cla</span><span class="p">()</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_ylim</span><span class="p">(</span><span class="n">bottom</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.1</span><span class="p">,</span> <span class="n">top</span> <span class="o">=</span> <span class="mi">5</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">x</span><span class="p">,</span> <span class="n">u</span><span class="p">,</span> <span class="s">'r'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'$t = '</span> <span class="o">+</span> <span class="s">'{:.2f}'</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">n</span> <span class="o">*</span> <span class="n">dt</span><span class="p">)</span> <span class="o">+</span> <span class="s">'$'</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">legend</span><span class="p">()</span>
    <span class="n">ax</span><span class="p">.</span><span class="n">set_title</span><span class="p">(</span><span class="s">'graph title'</span><span class="p">)</span>

<span class="k">def</span> <span class="nf">main</span><span class="p">():</span>
    <span class="k">print</span><span class="p">(</span><span class="n">dt</span> <span class="o">*</span> <span class="n">kappa</span> <span class="o">/</span> <span class="p">(</span><span class="n">dx</span> <span class="o">*</span> <span class="n">dx</span><span class="p">))</span>
    <span class="c1"># 初期条件を設定
</span>    <span class="c1">#for i in range(u.size):
</span>    <span class="c1">#    if -4 &lt;= x[i] &lt;= 0:
</span>    <span class="c1">#        u[i] = x[i] + 4
</span>    <span class="c1">#    elif 0 &lt;= x[i] &lt;= 4:
</span>    <span class="c1">#        u[i] = -x[i] + 4
</span>
    <span class="c1"># アニメーション作成
</span>    <span class="n">ani</span> <span class="o">=</span> <span class="n">FuncAnimation</span><span class="p">(</span><span class="n">fig</span><span class="p">,</span> <span class="n">update</span><span class="p">,</span> <span class="n">frames</span><span class="o">=</span><span class="nb">range</span><span class="p">(</span><span class="mi">601</span><span class="p">),</span> <span class="n">interval</span><span class="o">=</span><span class="mi">100</span><span class="p">)</span>
    <span class="n">ani</span><span class="p">.</span><span class="n">save</span><span class="p">(</span><span class="sa">R</span><span class="s">"directory\heat_simulations.mp4"</span><span class="p">,</span> <span class="n">writer</span><span class="o">=</span><span class="s">'ffmpeg'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="n">show</span><span class="p">()</span>

<span class="n">main</span><span class="p">()</span>
</code></pre></div></div>]]></content><author><name>今月の新刊（@skrbcr）</name></author><category term="physics" /><summary type="html"><![CDATA[熱拡散方程式とは （物理数学の授業で習っただけの知識なので、かなり浅いですが……）]]></summary></entry></feed>